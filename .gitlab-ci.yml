# List of images used in the pipeline
image: maven:3.5.2-jdk-8

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
  paths:
    - .m2/repository

before_script:
  - cd $CI_PROJECT_DIR

after_script:
  - cd $CI_PROJECT_DIR
  - echo "End of Pipeline"

#Stages
stages:
  - build
  - test
  - package
  - publish

# This job runs in the build stage, which runs first.
build-compiler:
  stage: build
  script:
    - cd compiler
    - mvn clean compile
    - cd ..

build-project:
  stage: build
  script:
    - cd project
    - mvn clean compile
    - cd ..

build-ui:
  stage: build
  script:
    - cd ui
    - mvn clean compile
    - cd ..

#Test Job
test-compiler:
  stage: test
  script:
    - cd compiler
    - mvn test
    - cd ..

test-project:
  stage: test
  script:
    - cd project
    - mvn test
    - cd ..

test-ui:
  stage: test
  script:
    - cd project
    - mvn test
    - cd ..

#Package Job
package-compiler:
  stage: package
  script:
    - cd compiler
    - mvn package -DskipTests=true
    - cd ..

package-project:
  stage: package
  script:
    - cd project
    - mvn package -DskipTests=true
    - cd ..

package-ui:
  stage: package
  script:
    - cd ui
    - mvn package -DskipTests=true
    - cd ..

#Publish Job
compiler:publish:
  stage: publish
  image: docker:stable
  services:
    - docker:25.0.1-dind

  script:
    - cd compiler
    - docker login -u$CI_REGISTRY_USER -p$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_NAME:latest || true
    - docker build --tag $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:latest
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_NAME: $CI_REGISTRY_IMAGE/compiler
  only:
    changes:
      - compiler/**/*

project:publish:
  stage: publish
  image: docker:stable
  services:
    - docker:25.0.1-dind
  script:
    - cd project
    - docker login -u$CI_REGISTRY_USER -p$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_NAME:latest || true
    - docker build --tag $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:latest
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_NAME: $CI_REGISTRY_IMAGE/project
  only:
    changes:
      - project/**/*

ui:publish:
  stage: publish
  image: docker:stable
  services:
    - docker:25.0.1-dind
  script:
    - cd ui
    - docker login -u$CI_REGISTRY_USER -p$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_NAME:latest || true
    - docker build --tag $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:latest
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_NAME: $CI_REGISTRY_IMAGE/ui
  only:
    changes:
      - ui/**/*
